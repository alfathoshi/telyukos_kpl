<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>