<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>